version: "3"

services:
  kafka:
    build: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_BROKER_ID: 1
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - storm

  producer:
    build:
      context: .
      dockerfile: producer/Dockerfile
      args:
        - TAXI_DATA_FOLDER=${TAXI_DATA_FOLDER}
    depends_on:
      - kafka
    networks:
      - storm
    environment:
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
      TAXI_DATA_FOLDER: ${TAXI_DATA_FOLDER}
      TAXI_DATA_SPEED: ${TAXI_DATA_SPEED}
      NUMBER_TAXIS: ${NUMBER_TAXIS}

  consumer:
    build:
      context: .
      dockerfile: consumer/Dockerfile
    depends_on:
      - zookeeper
      - kafka
      - redis
      - interface-server
    networks:
      - storm
    environment:
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
      KAFKA_GROUP_ID: ${KAFKA_GROUP_ID}
      REDIS_HOST: redis:6379
      NOTIFICATION_SERVER_ENDPOINT: http://interface-server:8080/notification
      FORBIDDEN_CITY_LAT: ${FORBIDDEN_CITY_LAT}
      FORBIDDEN_CITY_LON: ${FORBIDDEN_CITY_LON}
      PREDEFINED_AREA_RADIUS: ${PREDEFINED_AREA_RADIUS}
      PREDEFINED_SPEED_LIMIT: ${PREDEFINED_SPEED_LIMIT}
    ports:
      - '8080:8080' # Storm UI

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    platform: linux/amd64
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    networks:
      - storm

  storm-supervisor:
    build: storm-supervisor
    platform: linux/amd64
    depends_on:
      - zookeeper
      - consumer
    networks:
      - storm
    environment:
      WAIT_NIMBUS: consumer:6627

  interface-server:
    build:
      context: .
      dockerfile: interface-server/Dockerfile
    depends_on:
      - redis
    networks:
      - storm
    ports:
      - "10002:8080"
    environment:
      REDIS_HOST: redis:6379
      CORS_ORIGIN: ${INTERFACE_SERVER_CORS_ORIGIN}

  redis:
    container_name: redis
    build:
      context: ./redis
    networks:
      - storm
#    ports:
#      - 6379:6379

#  redis-example:
#    build:
#      context: .
#      dockerfile: ./redis-example/Dockerfile
#    depends_on:
#      - redis
#    networks:
#      - storm
#    environment:
#      REDIS_HOST: redis:6379

networks:
  storm:
